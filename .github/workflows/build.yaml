name: build
on:
  push:
    branches:
    - "*"
    tags:
    - "*.*.*"

permissions:
  contents: read
  checks: write
  id-token: write

jobs:
  test:
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest, macos-latest-xlarge]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - if: startsWith(runner.os, 'Linux') || startsWith(runner.os, 'macOS')
      uses: actions/cache@v3
      with:
        path: ~/.stack
        key: test-${{ runner.os }}-${{ hashFiles('stack.yaml.lock') }}
    - if: startsWith(runner.os, 'Windows')
      uses: actions/cache@v3
      with:
        path: |
          ~\AppData\Roaming\stack
          ~\AppData\Local\Programs\stack
        key: test-${{ runner.os }}-${{ hashFiles('stack.yaml.lock') }}
    - if: startsWith(runner.os, 'Linux') || startsWith(runner.os, 'macOS')
      shell: bash
      run: |
        if command -v stack > /dev/null; then
          stack upgrade || true
        else
          curl -sSL https://get.haskellstack.org/ | sh
        fi
    - run: stack build --coverage --test --no-run-tests
    - run: stack test --coverage
      env:
        JUNIT_ENABLED: "1"
        JUNIT_OUTPUT_DIRECTORY: .test_report
        JUNIT_SUITE_NAME: dojang-spec
    - uses: mikepenz/action-junit-report@v4
      if: success() || failure()
      with:
        report_paths: ".test_report/*.xml"
        check_name: "test report"
    - uses: 8c6794b6/hpc-codecov-action@v3
      with:
        target: stack:spec
        excludes: Main,Paths_dojang
    - uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest, macos-latest-xlarge]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - if: startsWith(runner.os, 'Linux') || startsWith(runner.os, 'macOS')
      uses: actions/cache@v3
      with:
        path: ~/.stack
        key: build-${{ runner.os }}-${{ hashFiles('stack.yaml.lock') }}
    - if: startsWith(runner.os, 'Windows')
      uses: actions/cache@v3
      with:
        path: |
          ~\AppData\Roaming\stack
          ~\AppData\Local\Programs\stack
        key: build-${{ runner.os }}-${{ hashFiles('stack.yaml.lock') }}
    - if: startsWith(runner.os, 'Linux') || startsWith(runner.os, 'macOS')
      shell: bash
      run: |
        if command -v stack > /dev/null; then
          stack upgrade || true
        else
          curl -sSL https://get.haskellstack.org/ | sh
        fi
    - if: github.ref_type != 'tag'
      run: >-
        stack build
        --ghc-options=-O2
        --copy-bins
        --local-bin-path="${{ runner.temp }}/dojang-bins/"
        --ghc-options=-DDOJANG_DEV_BUILD=${{ github.run_number }}
    - if: github.ref_type == 'tag'
      run: >-
        stack build
        --ghc-options=-O2
        --copy-bins
        --local-bin-path="${{ runner.temp }}/dojang-bins/"
    - uses: allejo/setup-dasel@v1
    - if: startsWith(runner.os, 'Linux') || startsWith(runner.os, 'macOS')
      shell: bash
      run: |
        cp ./LICENSE "$RUNNER_TEMP/dojang-bins/"
        version="$("$RUNNER_TEMP"/dojang-bins/dojang version \
                 | awk '{print $2}')"
        os="$("$RUNNER_TEMP"/dojang-bins/dojang env \
            | dasel -r toml -w yaml ".os")"
        arch="$("$RUNNER_TEMP"/dojang-bins/dojang env \
              | dasel -r toml -w yaml ".arch")"
        pushd "$RUNNER_TEMP/dojang-bins/"
        tar cvfJ "$RUNNER_TEMP/dojang-$version-$os-$arch.tar.xz" ./*
        popd
    - if: startsWith(runner.os, 'Windows')
      shell: powershell
      run: |
        Copy-Item .\LICENSE $env:RUNNER_TEMP\dojang-bins\
        $version = (& $env:RUNNER_TEMP\dojang-bins\dojang.exe version `
          ).Split()[1]
        & $env:RUNNER_TEMP\dojang-bins\dojang.exe env `
          | Out-File .env.toml -Encoding ascii
        $os = dasel -f .env.toml -r toml -w yaml ".os"
        $arch = dasel -f .env.toml -r toml -w yaml ".arch"
        Compress-Archive `
          -Path $env:RUNNER_TEMP\dojang-bins\* `
          -DestinationPath $env:RUNNER_TEMP\dojang-$version-$os-$arch.zip `
          -CompressionLevel Optimal
    - uses: actions/upload-artifact@v3
      with:
        path: ${{ runner.temp }}/dojang-*-*-*.*

# cSpell:ignore allejo codecov dasel DDOJANG popd pushd mikepenz xlarge
