name: build
on:
  push:
    branches:
    - "*"
    tags:
    - "*.*.*"

permissions:
  contents: read
  checks: write
  id-token: write

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - run: python3 scripts/check-doc-contents.py doc

  test:
    strategy:
      matrix:
        os:
        - windows-latest
        - macos-latest
        - ubuntu-latest
        - macos-latest-xlarge
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - if: startsWith(runner.os, 'Linux') || startsWith(runner.os, 'macOS')
      uses: actions/cache@v3
      with:
        path: ~/.stack
        key: test-${{ runner.os }}-${{ hashFiles('stack.yaml.lock') }}
    - if: startsWith(runner.os, 'Windows')
      uses: actions/cache@v3
      with:
        path: |
          ~\AppData\Roaming\stack
          ~\AppData\Local\Programs\stack
        key: test-${{ runner.os }}-${{ hashFiles('stack.yaml.lock') }}
    - if: startsWith(runner.os, 'Linux') || startsWith(runner.os, 'macOS')
      shell: bash
      run: |
        set -e
        if command -v stack > /dev/null; then
          stack upgrade || true
        else
          curl -sSL https://get.haskellstack.org/ | sh
        fi
    - run: stack build --coverage --test --no-run-tests
    - run: stack test --coverage
      env:
        JUNIT_ENABLED: "1"
        JUNIT_OUTPUT_DIRECTORY: .test_report
        JUNIT_SUITE_NAME: dojang-spec
    - uses: mikepenz/action-junit-report@v4
      if: success() || failure()
      with:
        report_paths: ".test_report/*.xml"
        check_name: "test report"
    - uses: 8c6794b6/hpc-codecov-action@v3
      with:
        target: stack:spec
        excludes: Main,Paths_dojang
    - uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest, macos-latest-xlarge]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - if: startsWith(runner.os, 'macOS')
      uses: actions/cache@v3
      with:
        path: ~/.stack
        key: build-${{ runner.os }}-${{ hashFiles('stack.yaml.lock') }}
    - if: startsWith(runner.os, 'Windows')
      uses: actions/cache@v3
      with:
        path: |
          ~\AppData\Roaming\stack
          ~\AppData\Local\Programs\stack
        key: build-${{ runner.os }}-${{ hashFiles('stack.yaml.lock') }}
    - if: startsWith(runner.os, 'macOS')
      shell: bash
      run: |
        set -e
        if command -v stack > /dev/null; then
          stack upgrade || true
        else
          curl -sSL https://get.haskellstack.org/ | sh
        fi
    - if: github.ref_type != 'tag'
      run: >-
        stack build
        --ghc-options=-O2
        --copy-bins
        --local-bin-path="${{ runner.temp }}/dojang-bins/"
        --ghc-options=-DDOJANG_DEV_BUILD=${{ github.run_number }}
    - if: github.ref_type == 'tag'
      run: >-
        stack build
        --ghc-options=-O2
        --flag dojang:static
        --copy-bins
        --local-bin-path="${{ runner.temp }}/dojang-bins/"
    - uses: allejo/setup-dasel@v1
    - if: startsWith(runner.os, 'macOS')
      shell: bash
      run: |
        set -e
        cp ./LICENSE "$RUNNER_TEMP/dojang-bins/"
        scripts/make-dist.sh "$RUNNER_TEMP/dojang-bins/"
        mv dojang-*.tar.xz "$RUNNER_TEMP/"
    - if: startsWith(runner.os, 'Windows')
      shell: powershell
      run: |
        Copy-Item .\LICENSE $env:RUNNER_TEMP\dojang-bins\
        & scripts\make-dist.ps1 $env:RUNNER_TEMP\dojang-bins\
        Move-Item dojang-*.zip $env:RUNNER_TEMP\
    - uses: actions/upload-artifact@v3
      with:
        name: dist
        path: ${{ runner.temp }}/dojang-*-*-*.*

  build-linux:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - uses: actions/checkout@v4
    - uses: docker/setup-buildx-action@v3
    - uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ github.token }}
    - id: build-image
      if: github.ref_type != 'tag'
      uses: docker/build-push-action@v5
      with:
        push: true
        tags: |
          ghcr.io/${{ github.repository }}:git-${{ github.sha }}
        cache-from:
          type=registry,ref=ghcr.io/${{ github.repository }}:build-cache
        cache-to:
          type=registry,ref=ghcr.io/${{ github.repository }}:build-cache,mode=max
        build-args: DOJANG_DEV_BUILD=${{ github.run_number }}
    - if: github.ref_type == 'tag'
      uses: docker/build-push-action@v5
      with:
        push: true
        tags: |
          ghcr.io/${{ github.repository }}:latest
          ghcr.io/${{ github.repository }}:git-${{ github.sha }}
          ghcr.io/${{ github.repository }}:${{ github.ref_name }}
        cache-from:
          type=registry,ref=ghcr.io/${{ github.repository }}:build-cache
        cache-to:
          type=registry,ref=ghcr.io/${{ github.repository }}:build-cache,mode=max
    - uses: allejo/setup-dasel@v1
    - run: |
        set -e
        mkdir -p "$RUNNER_TEMP/dojang-bins/"
        if [[ "$GITHUB_REF_TYPE" = tag ]]; then
          tag="$GITHUB_REF_NAME"
        else
          tag="git-$GITHUB_SHA"
        fi
        docker run "ghcr.io/$GITHUB_REPOSITORY:$tag" \
          cat /usr/local/bin/dojang \
            > "$RUNNER_TEMP/dojang-bins/dojang"
        cp ./LICENSE "$RUNNER_TEMP/dojang-bins/"
        scripts/make-dist.sh "$RUNNER_TEMP/dojang-bins"
        mv dojang-*.tar.xz "$RUNNER_TEMP/"
      env:
        DIGEST: ${{ steps.build-image.outputs.digest }}
    - uses: actions/upload-artifact@v3
      with:
        name: dist
        path: ${{ runner.temp }}/dojang-*-*-*.*

  doc:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
    steps:
    - uses: actions/checkout@v4
    - run: |
        set -e
        pip install --user -r doc/requirements.txt
        mkdocs build
      env:
        TOKEN: ${{ github.token }}
    - uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ github.token }}
        publish_dir: ./site
        keep_files: true

  release:
    needs: [check, test, build, build-linux]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      discussions: write
    steps:
    - uses: actions/checkout@v4
    - uses: actions/download-artifact@v3
      with:
        name: dist
        path: ${{ runner.temp }}/dist
    - run: |
        set -e
        if command -v stack > /dev/null; then
          stack upgrade || true
        else
          curl -sSL https://get.haskellstack.org/ | sh
        fi
        stack sdist
        mkdir -p "$RUNNER_TEMP/dist/"
        cp "$(stack path --dist-dir)"/dojang-*.tar.gz \
          "$RUNNER_TEMP/dist/"
        mkdir -p "$RUNNER_TEMP/sdist/"
        mv "$(stack path --dist-dir)"/dojang-*.tar.gz \
          "$RUNNER_TEMP/sdist/"
    - run: ls -al ${{ runner.temp }}/dist/
    - run: ls -al ${{ runner.temp }}/sdist/
    - id: lookup-version
      uses: mikefarah/yq@v4.35.2
      with:
        cmd: yq .version package.yaml
    - run: echo "$VERSION"
      env:
        VERSION: ${{ steps.lookup-version.outputs.result }}
    - if: github.ref_type == 'tag'
      run: '[[ "$VERSION" = "$GITHUB_REF_NAME" ]]'
      env:
        VERSION: ${{ steps.lookup-version.outputs.result }}
    - id: extract-changelog
      uses: dahlia/submark@5a5ff0a58382fb812616a5801402f5aef00f90ce
      with:
        input-file: CHANGES.md
        heading-level: 2
        heading-title-text: version ${{ steps.lookup-version.outputs.result }}
        ignore-case: true
        omit-heading: true
    - run: 'cat "$CHANGES_FILE"'
      env:
        CHANGES_FILE: ${{ steps.extract-changelog.outputs.output-file }}
    - if: github.ref_type == 'tag'
      uses: softprops/action-gh-release@v1
      with:
        body_path: ${{ steps.extract-changelog.outputs.output-file }}
        name: Dojang ${{ steps.lookup-version.outputs.result }}
        generate_release_notes: false
        discussion_category_name: Announcements
        files: ${{ runner.temp }}/dist/dojang-*
    - if: github.ref_type == 'tag'
      env:
        HACKAGE_API_KEY: ${{ secrets.HACKAGE_API_KEY }}
      run: |
        for file in "$RUNNER_TEMP/sdist"/*; do
          curl \
            -H "Authorization: X-ApiKey $HACKAGE_API_KEY" \
            -F package=@"$file" \
            https://hackage.haskell.org/packages/
        done

# cSpell:ignore allejo buildx codecov dasel DDOJANG hackage mikefarah
# cSpell:ignore mikepenz mkdocs noreply peaceiris popd pushd
# cSpell:ignore sdist softprops submark
